{"version":3,"sources":["./src/app/services/dashboard.service.ts","./src/app/dashboard/dashboard.routing.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.module.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DashboardService {\n  url: string =\"https://shopmanager.onrender.com\" ;\n\n  constructor(private http: HttpClient) {}\n\n  getDetails() {\n    return this.http.get(`${this.url}/dashboard/details`);\n  }\n}\n","import { Routes } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\n\nexport const DashboardRoutes: Routes = [{\n  path: '',\n  component: DashboardComponent\n}];\n","import { Component, AfterViewInit } from '@angular/core';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { DashboardService } from '../services/dashboard.service';\nimport { SnackbarService } from '../services/snackbar.service';\nimport { GlobalConstants } from '../shared/global-constants';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements AfterViewInit {\n  responseMessage: any;\n  data: any;\n  ngAfterViewInit() {}\n\n  constructor(\n    private dashboardService: DashboardService,\n    private ngxService: NgxUiLoaderService,\n    private snackBar: SnackbarService\n  ) {\n    this.ngxService.start();\n    this.dashboardData();\n  }\n\n  dashboardData() {\n    this.dashboardService.getDetails().subscribe(\n      (resp: any) => {\n        this.ngxService.stop();\n        this.data = resp.data;\n      },\n      (error: any) => {\n        this.ngxService.stop();\n        console.log(error);\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n}\n","<body>\n  <mat-card>\n    <b><span>Dashboard</span></b>\n  </mat-card>\n  <br />\n  <div class=\"row\">\n    <div class=\"column\">\n      <div class=\"card\">\n        <div class=\"container\">\n          <h2 class=\"title\">Total Category:</h2>\n          <h1 class=\"title\">{{ data?.category }}</h1>\n          <p>\n            <button class=\"button\" [routerLink]=\"['/cafe/category']\">\n              View Categories\n            </button>\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"column\">\n        <div class=\"card\">\n          <div class=\"container\">\n            <h2 class=\"title\">Total Products:</h2>\n            <h1 class=\"title\">{{ data?.product }}</h1>\n            <p>\n              <button class=\"button\" [routerLink]=\"['/cafe/product']\">\n                View Products\n              </button>\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"column\">\n        <div class=\"card\">\n          <div class=\"container\">\n            <h2 class=\"title\">Total Bills:</h2>\n            <h1 class=\"title\">{{ data?.bill }}</h1>\n            <p>\n              <button class=\"button\" [routerLink]=\"['/cafe/bill']\">\n                View Bills\n              </button>\n            </p>\n          </div>\n        </div>\n      </div>\n  </div>\n</body>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardRoutes } from './dashboard.routing';\nimport { MaterialModule } from '../shared/material-module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FlexLayoutModule,\n    RouterModule.forChild(DashboardRoutes)\n  ],\n  declarations: [DashboardComponent]\n})\nexport class DashboardModule { }\n"],"sourceRoot":"webpack:///"}