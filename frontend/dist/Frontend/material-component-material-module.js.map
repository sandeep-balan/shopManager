{"version":3,"sources":["./src/app/material-component/manage-order/manage-order.component.ts","./src/app/material-component/manage-order/manage-order.component.html","./src/app/material-component/manage-category/manage-category.component.ts","./src/app/material-component/manage-category/manage-category.component.html","./src/app/material-component/material.module.ts","./src/app/material-component/dialog/category/category.component.ts","./src/app/material-component/dialog/category/category.component.html","./src/app/material-component/dialog/view-bill-products/view-bill-products.component.ts","./src/app/material-component/dialog/view-bill-products/view-bill-products.component.html","./src/app/services/product.service.ts","./node_modules/file-saver/dist/FileSaver.min.js","./src/app/material-component/manage-user/manage-user.component.ts","./src/app/material-component/manage-user/manage-user.component.html","./src/app/services/bill.service.ts","./src/app/services/category.service.ts","./src/app/material-component/dialog/product/product.component.ts","./src/app/material-component/dialog/product/product.component.html","./src/app/material-component/manage-product/manage-product.component.ts","./src/app/material-component/manage-product/manage-product.component.html","./src/app/material-component/view-bill/view-bill.component.ts","./src/app/material-component/view-bill/view-bill.component.html","./src/app/material-component/material.routing.ts"],"names":[],"mappings":"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","file":"material-component-material-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { BillService } from 'src/app/services/bill.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { saveAs } from 'file-saver';\n\n\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-manage-order',\n  templateUrl: './manage-order.component.html',\n  styleUrls: ['./manage-order.component.scss'],\n})\nexport class ManageOrderComponent implements OnInit {\n  manageOrderForm: any = FormGroup;\n  displayedColumns: string[] = [\n    'name',\n    'category',\n    'price',\n    'quantity',\n    'total',\n    'edit',\n  ];\n  dataSource: any = [];\n  categories: any = [];\n  products: any = [];\n  price: any;\n  totalAmount: number = 0;\n  responseMessage: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private categoryService: CategoryService,\n    private productService: ProductService,\n    private billService: BillService,\n    private ngxService: NgxUiLoaderService,\n    private snackBar: SnackbarService,\n    private dialog: MatDialog,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.ngxService.start();\n\n    this.getCategories();\n\n    this.manageOrderForm = this.fb.group({\n      name: [\n        null,\n        [Validators.required, Validators.pattern(GlobalConstants.nameRegex)],\n      ],\n      email: [\n        null,\n        [Validators.required, Validators.pattern(GlobalConstants.emailRegex)],\n      ],\n      contactNumber: [\n        null,\n        [\n          Validators.required,\n          Validators.pattern(GlobalConstants.contactNumberRegex),\n        ],\n      ],\n      paymentMethod: [null, [Validators.required]],\n      product: [null, [Validators.required]],\n      category: [null, [Validators.required]],\n      quantity: [null, [Validators.required]],\n      price: [null, [Validators.required]],\n      total: [0, [Validators.required]],\n    });\n  }\n\n  getCategories() {\n    this.categoryService.getCategories().subscribe(\n      (resp: any) => {\n        this.ngxService.stop();\n        this.categories = resp.data;\n      },\n      (error) => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n\n  getProductsByCategory(value: any) {\n    this.productService.getProductsByCategory(value.id).subscribe(\n      (resp: any) => {\n        this.products = resp.data;\n        this.manageOrderForm.controls.price.setValue('');\n        this.manageOrderForm.controls.quantity.setValue('');\n        this.manageOrderForm.controls.total.setValue(0);\n      },\n      (error) => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n\n  getProductDetails(value: any) {\n    this.productService.getById(value.id).subscribe(\n      (resp: any) => {\n        this.price = resp.data.price;\n        this.manageOrderForm.controls.price.setValue(resp.data.price);\n        this.manageOrderForm.controls.quantity.setValue(1);\n        this.manageOrderForm.controls.total.setValue(this.price * 1);\n      },\n      (error) => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n\n  setQuantity(value: any) {\n    let temp = this.manageOrderForm.controls.quantity.value;\n    if (temp > 0) {\n      this.manageOrderForm.controls.total.setValue(\n        this.manageOrderForm.controls.quantity.value *\n        this.manageOrderForm.controls.price.value\n      );\n    } else if (temp != '') {\n      this.manageOrderForm.controls.quantity.setValue('1');\n      this.manageOrderForm.controls.total.setValue(\n        this.manageOrderForm.controls.quantity.value *\n        this.manageOrderForm.controls.price.value\n      );\n    }\n  }\n\n  validateProductAdd() {\n    if (\n      this.manageOrderForm.controls.total.value === 0 ||\n      this.manageOrderForm.controls.total.value === null ||\n      this.manageOrderForm.controls.quantity.value <= 0\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  validateSubmit() {\n    if (\n      this.totalAmount === 0 ||\n      this.manageOrderForm.controls.name.value === null ||\n      this.manageOrderForm.controls.email.value === null ||\n      this.manageOrderForm.controls.contactNumber.value === null ||\n      this.manageOrderForm.controls.paymentMethod.value === null ||\n      !this.manageOrderForm.controls.contactNumber.valid ||\n      !this.manageOrderForm.controls.email.valid\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  add() {\n    let formData = this.manageOrderForm.value;\n    let productName = this.dataSource.find(\n      (e: { id: number; }) => e.id == formData.product.id\n    );\n    if (productName === undefined) {\n      this.totalAmount += formData.total;\n      this.dataSource.push({\n        id: formData.product.id,\n        name: formData.product.name,\n        category: formData.category.name,\n        quantity: formData.quantity,\n        price: formData.price,\n        total: formData.total,\n      });\n\n      this.dataSource = [...this.dataSource];\n      this.snackBar.openSnackBar(GlobalConstants.productAdded, 'success');\n    } else {\n      this.snackBar.openSnackBar(\n        GlobalConstants.productExistError,\n        GlobalConstants.error\n      );\n    }\n  }\n\n  handleDeleteAction(value: any, element: any) {\n    this.totalAmount -= element.total;\n    this.dataSource.splice(value, 1);\n    this.dataSource = [...this.dataSource];\n  }\n\n  submitAction() {\n    this.ngxService.start();\n    let formData = this.manageOrderForm.value;\n    let data = {\n      name: formData.name,\n      email: formData.email,\n      contactNumber: formData.contactNumber,\n      paymentMethod: formData.paymentMethod,\n      totalAmount: this.totalAmount,\n      productDetails: JSON.stringify(this.dataSource),\n    };\n\n    this.billService.generateReport(data).subscribe(\n      (resp: any) => {\n        this.downloadFile(resp?.uuid);\n        this.manageOrderForm.reset();\n        this.dataSource = [];\n        this.totalAmount = 0;\n      },\n      (error) => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n\n  downloadFile(fileName: any) {\n    let data = {\n      uuid: fileName,\n    };\n\n    this.billService.getPDF(data).subscribe((resp: any) => {\n      saveAs(resp, fileName + '.pdf');\n      this.ngxService.stop();\n    });\n  }\n}\n","<mat-card>\n  <b>\n    <span>Manage Orders</span>\n    <button\n      mat-flat-button\n      color=\"primary\"\n      class=\"float-right\"\n      [disabled]=\"validateSubmit()\"\n      (click)=\"submitAction()\"\n    >\n      Submit & Get Bill\n    </button>\n  </b>\n</mat-card>\n\n<hr />\n<mat-card>\n  <b><span>Customer Details:</span></b>\n\n  <form [formGroup]=\"manageOrderForm\">\n    <div fxFlex fxLayout=\"column\">\n      <div fxLayout=\"row wrap\">\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Name</mat-label>\n          <input type=\"text\" matInput formControlName=\"name\" required />\n          <mat-error\n            *ngIf=\"\n              manageOrderForm.controls.name.touched &&\n              manageOrderForm.controls.name.invalid\n            \"\n          >\n            <span *ngIf=\"manageOrderForm.controls.name.errors.required\"\n              >This field is mandatory</span\n            >\n\n            <span *ngIf=\"manageOrderForm.controls.name.errors.pattern\"\n              >This field is invalid</span\n            >\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Email</mat-label>\n          <input type=\"text\" matInput formControlName=\"email\" required />\n          <mat-error\n            *ngIf=\"\n              manageOrderForm.controls.email.touched &&\n              manageOrderForm.controls.email.invalid\n            \"\n          >\n            <span *ngIf=\"manageOrderForm.controls.email.errors.required\"\n              >This field is mandatory</span\n            >\n\n            <span *ngIf=\"manageOrderForm.controls.email.errors.pattern\"\n              >This field is invalid</span\n            >\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Contact Number</mat-label>\n          <input\n            type=\"text\"\n            matInput\n            formControlName=\"contactNumber\"\n            required\n          />\n          <mat-error\n            *ngIf=\"\n              manageOrderForm.controls.contactNumber.touched &&\n              manageOrderForm.controls.contactNumber.invalid\n            \"\n          >\n            <span *ngIf=\"manageOrderForm.controls.contactNumber.errors.required\"\n              >This field is mandatory</span\n            >\n\n            <span *ngIf=\"manageOrderForm.controls.contactNumber.errors.pattern\"\n              >This field is invalid</span\n            >\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Payment Method</mat-label>\n          <mat-select matInput formControlName=\"paymentMethod\" required>\n            <mat-option value=\"Cash\">Cash</mat-option>\n            <mat-option value=\"Credit Card\">Credit Card</mat-option>\n            <mat-option value=\"Debit Card\">Debit card</mat-option>\n          </mat-select>\n          <mat-error\n            *ngIf=\"\n              manageOrderForm.controls.paymentMethod.touched &&\n              manageOrderForm.controls.paymentMethod.invalid\n            \"\n          >\n            <span *ngIf=\"manageOrderForm.controls.paymentMethod.errors.required\"\n              >This field is mandatory</span\n            >\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</mat-card>\n<hr />\n\n<mat-card>\n  <b><span>Select Product:</span></b>\n  <form [formGroup]=\"manageOrderForm\">\n    <div fxFlex fxLayout=\"column\">\n      <div fxLayout=\"'row wrap\">\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Category</mat-label>\n          <mat-select\n            formControlName=\"category\"\n            (selectionChange)=\"getProductsByCategory($event.value)\"\n            required\n          >\n            <mat-option\n              *ngFor=\"let category of categories\"\n              [value]=\"category\"\n              >{{ category.name }}</mat-option\n            >\n          </mat-select>\n          <mat-error\n            *ngIf=\"\n              manageOrderForm.controls.name.touched &&\n              manageOrderForm.controls.name.invalid\n            \"\n          >\n            <span *ngIf=\"manageOrderForm.controls.name.errors.required\"\n              >This field is mandatory</span\n            >\n\n            <span *ngIf=\"manageOrderForm.controls.name.errors.pattern\"\n              >This field is invalid</span\n            >\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Product</mat-label>\n          <mat-select\n            formControlName=\"product\"\n            (selectionChange)=\"getProductDetails($event.value)\"\n            required\n          >\n            <mat-option *ngFor=\"let product of products\" [value]=\"product\">{{\n              product.name\n            }}</mat-option>\n          </mat-select>\n          <mat-error\n            *ngIf=\"\n              manageOrderForm.controls.name.touched &&\n              manageOrderForm.controls.name.invalid\n            \"\n          >\n            <span *ngIf=\"manageOrderForm.controls.name.errors.required\"\n              >This field is mandatory</span\n            >\n\n            <span *ngIf=\"manageOrderForm.controls.name.errors.pattern\"\n              >This field is invalid</span\n            >\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Price</mat-label>\n          <input\n            type=\"text\"\n            matInput\n            formControlName=\"price\"\n            required\n            readonly\n          />\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Quantity</mat-label>\n          <input\n            type=\"number\"\n            matInput\n            formControlName=\"quantity\"\n            (keyup)=\"setQuantity($event)\"\n            #input\n          />\n          <mat-error\n            *ngIf=\"\n              manageOrderForm.controls.quantity.touched &&\n              manageOrderForm.controls.quantity.invalid\n            \"\n          >\n            <span *ngIf=\"manageOrderForm.controls.quantity.errors.required\"\n              >This field is mandatory</span\n            >\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Total</mat-label>\n          <input\n            type=\"text\"\n            matInput\n            formControlName=\"total\"\n            required\n            readonly\n          />\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n  <div>\n    <button\n      mat-flat-button\n      color=\"primary\"\n      matTooltip=\"Add Order\"\n      (click)=\"add()\"\n      [disabled]=\"validateProductAdd()\"\n    >\n      Add\n    </button>\n\n    <button mat-flat-button color=\"primary\" class=\"float-right\">\n      Total Amount: {{ totalAmount }}\n    </button>\n  </div>\n</mat-card>\n<hr>\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.name | titlecase }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"category\">\n      <th mat-header-cell *matHeaderCellDef>Category Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.category }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef>Price</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.price }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"quantity\">\n      <th mat-header-cell *matHeaderCellDef>Quantity</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.quantity }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"total\">\n      <th mat-header-cell *matHeaderCellDef>Total</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.total }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"edit\">\n      <th mat-header-cell *matHeaderCellDef>Action</th>\n      <td mat-cell *matCellDef=\"let element; let i = index\" class=\"action-link\">\n        \n        <button\n          mat-icon-button\n          color=\"primary\"\n          matTooltip=\"Delete\"\n          (click)=\"handleDeleteAction(i, element)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { CategoryComponent } from '../dialog/category/category.component';\nimport {ConfirmationComponent} from '../dialog/confirmation/confirmation.component';\n@Component({\n  selector: 'app-manage-category',\n  templateUrl: './manage-category.component.html',\n  styleUrls: ['./manage-category.component.scss'],\n})\nexport class ManageCategoryComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'edit'];\n  dataSource: any;\n  responseMessage: any;\n\n  constructor(\n    private categoryService: CategoryService,\n    private ngxService: NgxUiLoaderService,\n    private dialog: MatDialog,\n    private snackBar: SnackbarService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.ngxService.start();\n    this.tableData();\n  }\n\n  tableData() {\n    this.categoryService.getCategories().subscribe(\n      (resp: any) => {\n        this.ngxService.stop();\n        this.dataSource = new MatTableDataSource(resp.data);\n        console.log(resp);\n      },\n      (error:any) => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  handleAddAction() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      action: 'Add',\n    };\n    dialogConfig.width = '850px';\n    const dialogRef = this.dialog.open(CategoryComponent, dialogConfig);\n    this.router.events.subscribe(() => {\n      dialogRef.close();\n    });\n\n    const sub = dialogRef.componentInstance.onAddCategory.subscribe(\n      (resp: any) => {\n        this.tableData();\n      }\n    );\n  }\n\n  handleEditAction(value: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      action: 'Edit',\n      data: value,\n    };\n    dialogConfig.width = '850px';\n    const dialogRef = this.dialog.open(CategoryComponent, dialogConfig);\n    this.router.events.subscribe(() => {\n      dialogRef.close();\n    });\n\n    const sub = dialogRef.componentInstance.onEditCategory.subscribe(\n      (resp: any) => {\n        this.tableData();\n      }\n    );\n  }\n  \n  handleDeleteAction(value: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      message: 'Delete ' + value.name + ' Category',\n    };\n\n    const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfig);\n\n    const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe(\n      (resp: any) => {\n        this.ngxService.start();\n        this.deleteCategory(value.id);\n        dialogRef.close();\n      }\n    );\n  }\n\n  deleteCategory(id: any) {\n    this.categoryService.delete(id).subscribe(\n      (resp: any) => {\n        this.ngxService.stop();\n        this.tableData();\n        this.responseMessage = resp?.message;\n        this.snackBar.openSnackBar(this.responseMessage, 'success');\n      },\n      (error) => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n}\n","<mat-card>\n  <b>\n    <span>Manage Categories</span>\n    <button\n      mat-flat-button\n      color=\"primary\"\n      class=\"float-right\"\n      (click)=\"handleAddAction()\"\n    >\n      Add Category\n    </button>\n  </b>\n</mat-card>\n\n<hr />\n<mat-card>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <input type=\"text\" matInput (keyup)=\"applyFilter($event)\" #input />\n  </mat-form-field>\n</mat-card>\n\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"edit\">\n      <th mat-header-cell *matHeaderCellDef>Action</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n        <button\n          mat-icon-button\n          color=\"primary\"\n          matTooltip=\"Edit\"\n          (click)=\"handleEditAction(element)\"\n        >\n          <mat-icon>edit</mat-icon>\n        </button>\n        <!-- Here changed -->\n\n        <button\n          mat-icon-button\n          color=\"primary\"\n          matTooltip=\"Delete\"\n          (click)=\"handleDeleteAction(element)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n        \n        <!-- Here changed -->\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialRoutes } from './material.routing';\nimport { MaterialModule } from '../shared/material-module';\nimport { ViewBillProductsComponent } from './dialog/view-bill-products/view-bill-products.component';\nimport { ConfirmationComponent } from './dialog/confirmation/confirmation.component';\nimport { ChangePasswordComponent } from './dialog/change-password/change-password.component';\nimport { ManageCategoryComponent } from './manage-category/manage-category.component';\nimport { CategoryComponent } from './dialog/category/category.component';\nimport { ManageProductComponent } from './manage-product/manage-product.component';\nimport { ProductComponent } from './dialog/product/product.component';\nimport { ManageOrderComponent } from './manage-order/manage-order.component';\nimport { ViewBillComponent } from './view-bill/view-bill.component';\nimport { ManageUserComponent } from './manage-user/manage-user.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(MaterialRoutes),\n    MaterialModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    CdkTableModule\n  ],\n  providers: [],\n  declarations: [\n    ViewBillProductsComponent,\n    ConfirmationComponent,\n    ChangePasswordComponent,\n    ManageCategoryComponent,\n    CategoryComponent,\n    ManageProductComponent,\n    ProductComponent,\n    ManageOrderComponent,\n    ViewBillComponent,\n    ManageUserComponent,\n  ]\n})\nexport class MaterialComponentsModule {}\n","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss'],\n})\nexport class CategoryComponent implements OnInit {\n  onAddCategory = new EventEmitter();\n  onEditCategory = new EventEmitter();\n  categoryForm: any = FormGroup;\n  dialogAction: any = 'Add';\n  action: any = 'Add';\n  responseMessage: any;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\n    private fb: FormBuilder,\n    private categoryService: CategoryService,\n    public dialogRef: MatDialogRef<CategoryComponent>,\n    private snackBar: SnackbarService\n  ) {}\n\n  ngOnInit(): void {\n    this.categoryForm = this.fb.group({\n      name: [null, [Validators.required]],\n    });\n\n    if (this.dialogData.action === 'Edit') {\n      this.dialogAction = 'Edit';\n      this.action = 'Update';\n      this.categoryForm.patchValue(this.dialogData.data);\n    }\n  }\n\n  handleSubmit() {\n    if (this.dialogAction === 'Edit') {\n      this.edit();\n    } else {\n      this.add();\n    }\n  }\n\n  add() {\n    let formData = this.categoryForm.value;\n    let data = {\n      name: formData.name,\n    };\n\n    this.categoryService.add(data).subscribe(\n      (resp: any) => {\n        this.dialogRef.close();\n        this.onAddCategory.emit();\n        this.responseMessage = resp.message;\n        this.snackBar.openSnackBar(this.responseMessage, 'success');\n      },\n      (error) => {\n        this.dialogRef.close();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n\n  edit() {\n    let formData = this.categoryForm.value;\n    let data = {\n      id: this.dialogData.data.id,\n      name: formData.name,\n    };\n\n    this.categoryService.update(data).subscribe(\n      (resp: any) => {\n        this.dialogRef.close();\n        this.onEditCategory.emit();\n        this.responseMessage = resp.message;\n        this.snackBar.openSnackBar(this.responseMessage, 'success');\n      },\n      (error) => {\n        this.dialogRef.close();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row fxLayout=\"row\">\n    <span class=\"title-center\">{{ dialogData.action }} Category</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n  <form [formGroup]=\"categoryForm\">\n    <div fxFlex fxLayout=\"column\">\n      <div fxLayout=\"row wrap\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Name</mat-label>\n          <input type=\"text\" matInput formControlName=\"name\" required />\n          <mat-error\n            *ngIf=\"\n              categoryForm.controls.name.touched &&\n              categoryForm.controls.name.invalid\n            \"\n          >\n            <span *ngIf=\"categoryForm.controls.name.errors.required\"\n              >This field is mandatory</span\n            >\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"center\">\n  <button\n    mat-raised-button\n    color=\"primary\"\n    type=\"submit\"\n    (click)=\"handleSubmit()\"\n    [disabled]=\"!(categoryForm.valid && categoryForm.dirty)\"\n  >\n    {{ action }}\n  </button>\n\n  <button mat-raised-button color=\"primary\" mat-dialog-close>\n    Close\n  </button>\n</mat-dialog-actions>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-view-bill-products',\n  templateUrl: './view-bill-products.component.html',\n  styleUrls: ['./view-bill-products.component.scss'],\n})\nexport class ViewBillProductsComponent implements OnInit {\n  displayedColumns: string[] = [\n    'name',\n    'category',\n    'price',\n    'quantity',\n    'total',\n  ];\n  dataSource: any = [];\n  data: any;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\n    public dialogRef: MatDialogRef<ViewBillProductsComponent>\n  ) {}\n\n  ngOnInit() {\n    \n    this.data = this.dialogData.data;    \n    this.dataSource = this.data.productDetails;\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row fxLayout=\"row\">\n    <span class=\"title-center\"> View Bill </span>\n    <span class=\"spacer\"></span>\n    <button class=\"mat-dialog-close\" mat-icon-button mat-dialog-close>\n      <mat-icon>cancel</mat-icon>\n    </button>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n  <table id=\"customers\">\n    <tr>\n      <td><b>Name: </b> {{ data.name }}</td>\n      <td><b>Email: </b> {{ data.email }}</td>\n    </tr>\n\n    <tr>\n      <td><b>Contact Number: </b> {{ data.contactNumber }}</td>\n      <td><b>Payment Method: </b> {{ data.paymentMethod }}</td>\n    </tr>\n  </table>\n\n  <div class=\"responsive-table\">\n    <br />\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Name</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.name | titlecase }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"category\">\n        <th mat-header-cell *matHeaderCellDef>Category</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.category }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef>Price</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.price }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"quantity\">\n        <th mat-header-cell *matHeaderCellDef>Quantity</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.quantity }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"total\">\n        <th mat-header-cell *matHeaderCellDef>Total</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.total }}\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n  </div>\n</mat-dialog-content>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  url: string = environment.apiURL;\n  jsonHeader = {\n    headers: new HttpHeaders().set('Content-Type', 'application/json'),\n  };\n\n  constructor(private http: HttpClient) {}\n\n  add(data: any) {\n    return this.http.post(`${this.url}/product/add`, data, this.jsonHeader);\n  }\n\n  update(data: any) {\n    return this.http.patch(`${this.url}/product/update`, data, this.jsonHeader);\n  }\n\n  getProducts() {\n    return this.http.get(`${this.url}/product/get`);\n  }\n\n  updateStatus(data: any) {\n    return this.http.patch(\n      `${this.url}/product/updateStatus`,\n      data,\n      this.jsonHeader\n    );\n  }\n\n  delete(id: any) {\n    return this.http.delete(\n      `${this.url}/product/delete/${id}`,\n      this.jsonHeader\n    );\n  }\n\n  getProductsByCategory(id: any) {\n    return this.http.get(`${this.url}/product/getByCategoryID/${id}`);\n  }\n\n  getById(id: any) {\n    return this.http.get(`${this.url}/product/getByID/${id}`);\n  }\n}\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\n\n@Component({\n  selector: 'app-manage-user',\n  templateUrl: './manage-user.component.html',\n  styleUrls: ['./manage-user.component.scss'],\n})\nexport class ManageUserComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'email', 'contactNumber', 'status','delete'];\n  dataSource: any;\n  responseMessage: any;\n\n  constructor(\n    private userService: UserService,\n    private ngxService: NgxUiLoaderService,\n    private dialog: MatDialog,\n    private snackBar: SnackbarService\n  ) {}\n\n  ngOnInit(): void {\n    this.ngxService.start();\n    this.tableData();\n  }\n\n  tableData() {\n    this.userService.getUsers().subscribe(\n      (resp: any) => {\n        this.ngxService.stop();\n        this.dataSource = new MatTableDataSource(resp.data);\n      },\n      (error) => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  handleChangeAction(status: any, id: any) {\n    this.ngxService.start();\n    let data = {\n      status: status.toString(),\n      id: id,\n    };\n\n    this.userService.update(data).subscribe(\n      (resp: any) => {\n        this.ngxService.stop();\n        this.responseMessage = resp?.message;\n        this.snackBar.openSnackBar(this.responseMessage, 'success');\n      },\n      (error) => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n  handleDeleteAction(value:any){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      message:\"Delete \"+value.name+\" User\"\n    };\n    const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfig);\n\n    const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe(\n      (rsp:any) =>{\n        this.ngxService.start();\n        this.deleteUser(value.id);\n        dialogRef.close();\n      }\n    );\n  }\n\n  deleteUser(id: any){\n    this.userService.delete(id).subscribe(\n      (resp:any) =>{\n        this.ngxService.stop();\n        this.tableData();\n        this.responseMessage = resp?.message;\n        this.snackBar.openSnackBar(this.responseMessage, \"success\");\n      },\n      (error) =>{\n        this.ngxService.stop();\n        if(error.error?.message){\n          this.responseMessage = error.error?.message;\n        }\n        else{\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    )\n  }\n}\n","<mat-card>\n  <b>\n    <span>Manage Users</span>\n  </b>\n</mat-card>\n\n<hr />\n<mat-card>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <input type=\"text\" matInput (keyup)=\"applyFilter($event)\" #input />\n  </mat-form-field>\n</mat-card>\n\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.name | titlecase }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef>Email</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"contactNumber\">\n      <th mat-header-cell *matHeaderCellDef>Phone</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.contactNumber }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"status\">\n      <th mat-header-cell *matHeaderCellDef>Status</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n        <mat-slide-toggle (change)=\"handleChangeAction($event.checked, element.id)\" color=\"primary\"\n          matTooltip=\"Activate/Deactivate User\" [checked]=\"element.status\">\n        </mat-slide-toggle>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"delete\">\n      <th mat-header-cell *matHeaderCellDef>Delete User</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n        <button mat-icon-button color=\"primary\" (click)=\"handleDeleteAction(element)\" matTooltip=\"Delete\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BillService {\n  url: string = environment.apiURL;\n  jsonHeader = {\n    headers: new HttpHeaders().set('Content-Type', 'application/json'),\n  };\n\n  constructor(private http: HttpClient) {}\n\n  generateReport(data: any) {\n    return this.http.post(\n      `${this.url}/bill/generateReport`,\n      data,\n      this.jsonHeader\n    );\n  }\n\n  getPDF(data: any): Observable<Blob> {\n    return this.http.post(`${this.url}/bill/getPDF`, data, {\n      responseType: 'blob',\n    });\n  }\n\n  getBills() {\n    return this.http.get(`${this.url}/bill/getBills`);\n  }\n\n  delete(id: any) {\n    return this.http.delete(`${this.url}/bill/delete/${id}`, this.jsonHeader);\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  url: string = environment.apiURL;\n  jsonHeader = {\n    headers: new HttpHeaders().set('Content-Type', 'application/json'),\n  };\n\n  constructor(private http: HttpClient) {}\n\n  add(data: any) {\n    return this.http.post(`${this.url}/category/add/`, data, this.jsonHeader);\n  }\n\n  update(data: any) {\n    return this.http.patch(`${this.url}/category/update/`, data, this.jsonHeader);\n  }\n\n  getCategories() {\n    return this.http.get(`${this.url}/category/get/`);\n  }\n  delete(id:any){\n    return this.http.delete(`${this.url}/category/delete/${id}`);\n  }\n}","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss'],\n})\nexport class ProductComponent implements OnInit {\n  onAddCategory = new EventEmitter();\n  onEditCategory = new EventEmitter();\n  productForm: any = FormGroup;\n  dialogAction: any = 'Add';\n  action: any = 'Add';\n  responseMessage: any;\n  categories: any = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\n    private fb: FormBuilder,\n    private productService: ProductService,\n    private categoryService: CategoryService,\n    public dialogRef: MatDialogRef<ProductComponent>,\n    private snackBar: SnackbarService\n  ) {}\n\n  ngOnInit(): void {\n    this.productForm = this.fb.group({\n      name: [\n        null,\n        [Validators.required, Validators.pattern(GlobalConstants.nameRegex)],\n      ],\n      categoryId: [null, [Validators.required]],\n      price: [null, [Validators.required]],\n      description: [null, [Validators.required]],\n    });\n\n    if (this.dialogData.action === 'Edit') {\n      this.dialogAction = 'Edit';\n      this.action = 'Update';\n      this.productForm.patchValue(this.dialogData.data);\n    }\n\n    this.getCategories();\n  }\n\n  getCategories() {\n    this.categoryService.getCategories().subscribe(\n      (resp: any) => {\n        this.categories = resp.data;\n      },\n      (error) => {\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n\n  handleSubmit() {\n    if (this.dialogAction === 'Edit') {\n      this.edit();\n    } else if (this.dialogAction === 'Add') {\n      this.add();\n    }\n  }\n\n  add() {\n    let formData = this.productForm.value;\n    let data = {\n      name: formData.name,\n      categoryID: formData.categoryId,\n      price: formData.price,\n      description: formData.description,\n    };\n\n    this.productService.add(data).subscribe(\n      (resp: any) => {\n        this.dialogRef.close();\n        this.onAddCategory.emit();\n        this.responseMessage = resp.message;\n        this.snackBar.openSnackBar(this.responseMessage, 'success');\n      },\n      (error) => {\n        this.dialogRef.close();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n\n  edit() {\n    let formData = this.productForm.value;\n    let data = {\n      id: this.dialogData.data.id,\n      name: formData.name,\n      categoryID: formData.categoryId,\n      price: formData.price,\n      description: formData.description,\n    };\n\n    this.productService.update(data).subscribe(\n      (resp: any) => {\n        this.dialogRef.close();\n        this.onEditCategory.emit();\n        this.responseMessage = resp.message;\n        this.snackBar.openSnackBar(this.responseMessage, 'success');\n      },\n      (error) => {\n        this.dialogRef.close();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n\n  \n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row fxLayout=\"row\">\n    <span class=\"title-center\">{{ dialogData.action }} Product</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n  <form [formGroup]=\"productForm\">\n    <div fxFlex fxLayout=\"column\">\n      <div fxLayout=\"row wrap\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Name</mat-label>\n          <input type=\"text\" matInput formControlName=\"name\" required />\n          <mat-error\n            *ngIf=\"\n              productForm.controls.name.touched &&\n              productForm.controls.name.invalid\n            \"\n          >\n            <span *ngIf=\"productForm.controls.name.errors.required\"\n              >This field is mandatory</span\n            >\n            <span *ngIf=\"productForm.controls.name.errors.pattern\"\n              >This field is invalid</span\n            >\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div fxLayout=\"row wrap\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Category Name</mat-label>\n          <mat-select formControlName=\"categoryId\">\n            <mat-option\n              *ngFor=\"let category of categories\"\n              [value]=\"category.id\"\n              >{{ category.name }}</mat-option\n            >\n          </mat-select>\n          <mat-error\n            *ngIf=\"\n              productForm.controls.categoryId.touched &&\n              productForm.controls.categoryId.invalid\n            \"\n          >\n            <span *ngIf=\"productForm.controls.categoryId.errors.required\"\n              >This field is mandatory</span\n            >\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Price</mat-label>\n          <input type=\"number\" matInput formControlName=\"price\" required />\n          <mat-error\n            *ngIf=\"\n              productForm.controls.price.touched &&\n              productForm.controls.price.invalid\n            \"\n          >\n            <span *ngIf=\"productForm.controls.price.errors.required\"\n              >This field is mandatory</span\n            >\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div fxLayout=\"row wrap\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Description</mat-label>\n          <input type=\"text\" matInput formControlName=\"description\" required />\n          <mat-error\n            *ngIf=\"\n              productForm.controls.description.touched &&\n              productForm.controls.description.invalid\n            \"\n          >\n            <span *ngIf=\"productForm.controls.description.errors.required\"\n              >This field is mandatory</span\n            >\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"center\">\n  <button\n    mat-raised-button\n    color=\"primary\"\n    type=\"submit\"\n    (click)=\"handleSubmit()\"\n    [disabled]=\"!(productForm.valid && productForm.dirty)\"\n  >\n    {{ action }}\n  </button>\n\n  <button mat-raised-button color=\"primary\" mat-dialog-close>Close</button>\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { ProductService } from 'src/app/services/product.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\nimport { ProductComponent } from '../dialog/product/product.component';\n\n@Component({\n  selector: 'app-manage-product',\n  templateUrl: './manage-product.component.html',\n  styleUrls: ['./manage-product.component.scss'],\n})\nexport class ManageProductComponent implements OnInit {\n  displayedColumns: string[] = [\n    'name',\n    'category',\n    'description',\n    'price',\n    'edit',\n  ];\n  dataSource: any;\n  responseMessage: any;\n\n  constructor(\n    private productService: ProductService,\n    private ngxService: NgxUiLoaderService,\n    private dialog: MatDialog,\n    private snackBar: SnackbarService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.ngxService.start();\n    this.tableData();\n  }\n\n  tableData() {\n    this.productService.getProducts().subscribe(\n      (resp: any) => {\n        this.ngxService.stop();\n        this.dataSource = new MatTableDataSource(resp.data);\n      },\n      (error) => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  handleAddAction() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      action: 'Add',\n    };\n    dialogConfig.width = '850px';\n    const dialogRef = this.dialog.open(ProductComponent, dialogConfig);\n    this.router.events.subscribe(() => {\n      dialogRef.close();\n    });\n\n    const sub = dialogRef.componentInstance.onAddCategory.subscribe(\n      (resp: any) => {\n        this.tableData();\n      }\n    );\n  }\n\n  handleEditAction(value: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      action: 'Edit',\n      data: value,\n    };\n    dialogConfig.width = '850px';\n    const dialogRef = this.dialog.open(ProductComponent, dialogConfig);\n    this.router.events.subscribe(() => {\n      dialogRef.close();\n    });\n\n    const sub = dialogRef.componentInstance.onEditCategory.subscribe(\n      (resp: any) => {\n        this.tableData();\n      }\n    );\n  }\n\n  handleDeleteAction(value: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      message: 'delete ' + value.name + ' product',\n    };\n\n    const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfig);\n\n    const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe(\n      (resp: any) => {\n        this.ngxService.start();\n        this.deleteProduct(value.id);\n        dialogRef.close();\n      }\n    );\n  }\n\n  deleteProduct(id: any) {\n    this.productService.delete(id).subscribe(\n      (resp: any) => {\n        this.ngxService.stop();\n        this.tableData();\n        this.responseMessage = resp?.message;\n        this.snackBar.openSnackBar(this.responseMessage, 'success');\n      },\n      (error) => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n\n  onChange(status: any, id: any) {\n    let data = {\n      status: status.toString(),\n      id:id,\n    };\n\n    this.productService.updateStatus(data).subscribe(\n      (resp: any) => {\n        this.ngxService.stop();\n        this.responseMessage = resp?.message;\n        this.snackBar.openSnackBar(this.responseMessage, 'success');\n      },\n      (error) => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n}\n","<mat-card>\n  <b>\n    <span>Manage Products</span>\n    <button\n      mat-flat-button\n      color=\"primary\"\n      class=\"float-right\"\n      (click)=\"handleAddAction()\"\n    >\n      Add Product\n    </button>\n  </b>\n</mat-card>\n\n<hr />\n<mat-card>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <input type=\"text\" matInput (keyup)=\"applyFilter($event)\" #input />\n  </mat-form-field>\n</mat-card>\n\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.name | titlecase }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"category\">\n      <th mat-header-cell *matHeaderCellDef>Category Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.categoryName }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.description }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef>Price</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.price }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"edit\">\n      <th mat-header-cell *matHeaderCellDef>Action</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n        <button\n          mat-icon-button\n          color=\"primary\"\n          matTooltip=\"Edit\"\n          (click)=\"handleEditAction(element)\"\n        >\n          <mat-icon>edit</mat-icon>\n        </button>\n\n        <button\n          mat-icon-button\n          color=\"primary\"\n          matTooltip=\"Delete\"\n          (click)=\"handleDeleteAction(element)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n\n        <mat-slide-toggle\n          (change)=\"onChange($event.checked, element.id)\"\n          color=\"primary\"\n          matTooltip=\"Activate/Deactivate Product\"\n          [checked]=\"element.status\"\n        >\n        </mat-slide-toggle>\n      </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n</div>\n","import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { saveAs } from 'file-saver';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { BillService } from 'src/app/services/bill.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\nimport { ViewBillProductsComponent } from '../dialog/view-bill-products/view-bill-products.component';\n\n@Component({\n  selector: 'app-view-bill',\n  templateUrl: './view-bill.component.html',\n  styleUrls: ['./view-bill.component.scss'],\n})\nexport class ViewBillComponent implements OnInit {\n  displayedColumns: string[] = [\n    'name',\n    'email',\n    'contactNumber',\n    'paymentMethod',\n    'total',\n    'view',\n  ];\n  dataSource: any;\n  responseMessage: any;\n\n  constructor(\n    private billService: BillService,\n    private ngxService: NgxUiLoaderService,\n    private dialog: MatDialog,\n    private snackBar: SnackbarService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.ngxService.start();\n    this.tableData();\n  }\n\n  tableData() {\n    this.billService.getBills().subscribe(\n      (resp: any) => {\n        this.ngxService.stop();\n        this.dataSource = new MatTableDataSource(resp.data);\n      },\n      (error) => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  handleViewAction(value: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      data: value,\n    };\n    dialogConfig.width = '100%';\n\n    const dialogRef = this.dialog.open(ViewBillProductsComponent, dialogConfig);\n    this.router.events.subscribe(() => {\n      dialogRef.close();\n    });\n  }\n\n  downloadReportAction(value: any) {\n    this.ngxService.start();\n    let data = {\n      name: value.name,\n      email: value.email,\n      uuid: value.uuid,\n      contactNumber: value.contactNumber,\n      paymentMethod: value.paymentMethod,\n      totalAmount: value.total,\n      productDetails: value.productDetails,\n    };\n\n    this.billService.getPDF(data).subscribe((resp) => {\n      saveAs(resp, value.uuid + '.pdf');\n      this.ngxService.stop();\n    });\n  }\n\n  handleDeleteAction(value: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      message: 'delete ' + value.name + ' bill',\n    };\n    const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfig);\n    const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe(\n      (response) => {\n        this.ngxService.start();\n        this.deleteProduct(value.id);\n        dialogRef.close();\n      }\n    );\n  }\n\n  deleteProduct(id: any) {\n    this.billService.delete(id).subscribe(\n      (resp: any) => {\n        this.ngxService.stop();\n        this.tableData();\n        this.responseMessage = resp?.message;\n        this.snackBar.openSnackBar(this.responseMessage, 'success');\n      },\n      (error) => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      }\n    );\n  }\n}\n","<mat-card>\n  <b>\n    <span>View Bill</span>\n  </b>\n</mat-card>\n\n<hr />\n<mat-card>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <input type=\"text\" matInput (keyup)=\"applyFilter($event)\" #input />\n  </mat-form-field>\n</mat-card>\n<hr />\n\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.name | titlecase }}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef>Email</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.email }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"contactNumber\">\n      <th mat-header-cell *matHeaderCellDef>ContactNumber</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.contactNumber }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"paymentMethod\">\n      <th mat-header-cell *matHeaderCellDef>Payment Method</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.paymentMethod }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"total\">\n      <th mat-header-cell *matHeaderCellDef>Total</th>\n      <td mat-cell *matCellDef=\"let element\">\n        {{ element.total }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"view\">\n      <th mat-header-cell *matHeaderCellDef>Action</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n        <button\n          mat-icon-button\n          color=\"primary\"\n          matTooltip=\"View\"\n          (click)=\"handleViewAction(element)\"\n        >\n          <mat-icon>visibility</mat-icon>\n        </button>\n\n        <button\n          mat-icon-button\n          color=\"primary\"\n          matTooltip=\"Download Bill\"\n          (click)=\"downloadReportAction(element)\"\n        >\n          <mat-icon>summarize</mat-icon>\n        </button>\n\n        <button\n          mat-icon-button\n          color=\"primary\"\n          matTooltip=\"Delete\"\n          (click)=\"handleDeleteAction(element)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n</div>\n","import { Routes } from '@angular/router';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { RouteGuardService } from '../services/route-guard.service';\nimport { ManageCategoryComponent } from './manage-category/manage-category.component';\nimport { ManageOrderComponent } from './manage-order/manage-order.component';\nimport { ManageProductComponent } from './manage-product/manage-product.component';\nimport { ManageUserComponent } from './manage-user/manage-user.component';\nimport { ViewBillComponent } from './view-bill/view-bill.component';\n\nexport const MaterialRoutes: Routes = [\n  {\n    path: 'category',\n    component: ManageCategoryComponent,\n    canActivate: [RouteGuardService],\n    data: {\n      expectedRole: ['admin'],\n    },\n  },\n  {\n    path: 'product',\n    component: ManageProductComponent,\n    canActivate: [RouteGuardService],\n    data: {\n      expectedRole: ['admin'],\n    },\n  },\n  {\n    path: 'order',\n    component: ManageOrderComponent,\n    canActivate: [RouteGuardService],\n    data: {\n      expectedRole: ['admin', 'user'],\n    },\n  },\n  {\n    path: 'bill',\n    component: ViewBillComponent,\n    canActivate: [RouteGuardService],\n    data: {\n      expectedRole: ['admin', 'user'],\n    },\n  },\n  {\n    path: 'user',\n    component: ManageUserComponent,\n    canActivate: [RouteGuardService],\n    data: {\n      expectedRole: ['admin'],\n    },\n  },\n];\n"],"sourceRoot":"webpack:///"}